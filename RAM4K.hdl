// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7);
    RAM512(in=in, load=R0, address=address[0..8], out=R0Out);
    RAM512(in=in, load=R1, address=address[0..8], out=R1Out);
    RAM512(in=in, load=R2, address=address[0..8], out=R2Out);
    RAM512(in=in, load=R3, address=address[0..8], out=R3Out);
    RAM512(in=in, load=R4, address=address[0..8], out=R4Out);
    RAM512(in=in, load=R5, address=address[0..8], out=R5Out);
    RAM512(in=in, load=R6, address=address[0..8], out=R6Out);
    RAM512(in=in, load=R7, address=address[0..8], out=R7Out);
    Mux8Way16(a=R0Out, b=R1Out, c=R2Out, d=R3Out, e=R4Out, f=R5Out, g=R6Out, h=R7Out, sel=address[9..11], out=out);

}